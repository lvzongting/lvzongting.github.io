<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Zongting Lv]]></title>
  <link href="http://lvzongting.github.io/atom.xml" rel="self"/>
  <link href="http://lvzongting.github.io/"/>
  <updated>2014-04-17T16:29:07+08:00</updated>
  <id>http://lvzongting.github.io/</id>
  <author>
    <name><![CDATA[Zongting Lv]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Play with Archlinux]]></title>
    <link href="http://lvzongting.github.io/blog/2014/04/15/play-with-archlinux/"/>
    <updated>2014-04-15T01:48:41+08:00</updated>
    <id>http://lvzongting.github.io/blog/2014/04/15/play-with-archlinux</id>
    <content type="html"><![CDATA[<p>小时候在书店看到《玩转windows XP》就会想为什么没有玩转Linux 后来有了《玩转Linux》发现写的还是不咋地，中文资料和英文资料相去甚远，一些人开始看中文后来水平高了，英文也看熟了，就懒得往回翻译了，所以，导致长期以来，中文资料少、散，大家入门的时候都会走一些弯路。</p>

<!--more-->

<p>我根据我听说的，和自己学习过程中走过的弯路重新整理一下，试图写一份欢快活泼的笔记。但是想想时间确实有限，根本写不出来，那些有时间写书的，写出来的质量确实太扯淡。这永远是个矛盾，鸟哥的私房菜很好，但是，随着时间的流逝里面的一些东西有些过时了，不知道那本书有没有兴趣再出个第二版之类的。</p>

<p>希望以后有能人出现解决这个问题吧。能给中文圈中做出一手好的linux资料。并不只是翻译，而是按照中文大众的学习习惯写一些东西。</p>

<p>我将要写的是一些很随意的笔记，大部分是根据记忆写的，当然我会根据留言提问，逐步的修改这些。希望能带给大家一些茶余饭后的值得谈论的有趣的话题。</p>

<p>如何快速的无痛的获得archlinux</p>

<p>语言之有限，诉说千遍，百闻不如一见，你先快速的无痛的获得一个archlinux 然后就有一个直观的印象了。</p>

<p>无痛那么就需要有一个独立的U盘，所有的操作都在U盘上进行，与原来的硬盘没有什么关系，现在U盘很便宜，如果没有就买一个尽量便宜的U盘。如果你在有你个人数据的磁盘上做操作的时候需要小心，格外小心，不能犯错误。否则会造成不必要的损失。等你都玩熟了，再弄到本地磁盘上也不晚。</p>

<p>快速就需要网络的支持，通过网络获取必要的文件，这样效率最高。你可以通过购买光盘或是其他方式获得这些文件，但是，通过网络获得会更加方便。而且现在好像网络比光盘更加普及。</p>

<h3 id="archlinux">1、确定从哪里获得archlinux</h3>

<p>archlinux都是被大家整理好的，放在一些确定的文件服务器上，这些服务器叫做软件源，不用去混乱的论坛里面搜索，也不用去登陆那些充满广告的下载软件网站。这里有个固定的软件源列表，</p>

<p>软件源列表地址是：https://www.archlinux.org/mirrorlist/all/</p>

<p>在这里通过搜索(Ctrl+F)来找到china 然后 选一个你认识的地址，比如：</p>

<p>163.com 网易   地址：http://mirrors.163.com/archlinux/</p>

<p>ustc.edu.cn 中科大 地址：http://mirrors.ustc.edu.cn/archlinux/</p>

<p>bjtu 北京交通大学 tsinghua.edu.cn 清华 等等吧我就不举例了。</p>

<p>选好一个就行，然后用浏览器登陆进去看看，这就是archlinux的真身了，这就像一个巨大的网络磁盘，你可以自由的下载里面的所有内容。不需要付钱，没有广告，非常干净整齐直接有组织的将所有的东西都呈现在你面前。剩下的就是只要掌握了，把这些文件中的一些文件放到磁盘中一个合理的位置中，那么archlinux就能运行起来了。没有什么所谓的安装过程。够灵活吧。</p>

<p>后文中就以中科大的软件源为例子进行命令的演示。各位可以根据自己的实际情况酌情替换。</p>

<h3 id="u">2、将四个的文件写入U盘</h3>

<p>对！只需要四个文件写入U盘合适的位置，就能马上得到一个archlinux。</p>

<p>Step 1、把U盘格式化成FAT32格式</p>

<p>Step 2、通过浏览器进入这个网址：http://mirrors.ustc.edu.cn/archlinux/iso/archboot/latest/boot/</p>

<p>然后下载vmlinuz_i686 initramfs_i686.img两个文件到U盘上</p>

<p>Step 3、通过浏览器获得Grub4DOS文件：下载 http://download.gna.org/grub4dos/grub4dos-0.4.4.zip</p>

<p>然后用你熟知的解压工具从中解压出grldr.mbr grldr两个文件</p>

<p>将grldr放到U盘上，然后将grldr.mbr放到一个临时的工作目录，比如/tmp</p>

<p>这个文件比较特殊，他并不像平时的文件可以通过复制粘贴就放到U盘上就可以了，它需要放到特殊的位置的上，而普通的复制命令是做不到这一点的，所以我们需要一个更加高级的复制命令 dd 。</p>

<p>执行下面两句话(假设你的U盘是/dev/sdb)(如果你的系统不是linux那么请参看FAQ 3 )</p>

<p>dd if=/tmp/grldr.mbr of=/dev/sdb bs=440 count=1</p>

<p>dd if=/tmp/grldr.mbr of=/dev/sdb skip=1 seek=1</p>

<p>Step 4、在U盘上创建menu.lst文件</p>

<p>文件内容如下：</p>

<p>title Archlinux
   find –set-root –ignore-floppies /vmlinuz_i686
   kernel /vmlinuz_i686
   initrd /initramfs_i686.img</p>

<p>Step 5、检查一下，U盘中应该有四个文件，grldr vmlinuz_i686 initramfs_i686.img menu.lst</p>

<h3 id="u-1">3、通过U盘重新启动计算机</h3>

<p>当你看到Archlinux的时候记着要按一下回车确认进入系统。怎么样？随着屏幕的滚动你就得到了一个传说中的archlinux。</p>

<p>下一节将带着大家在这个archlinux 中漫游一番，从而更加的了解自己的计算机。还有其它问题，在后面留言我会更新到FAQ中的。</p>

<p>FAQ：</p>

<h4 id="qmirrors">1、Q：软件源地址中的mirrors是啥意思？</h4>

<p>A：是镜像的意思，其实软件源只有一个那就是archlinux的官方源，其他的源都是镜像克隆了这个官方源的内容的镜像源，所以叫做mirrors。与www万维网服务相对应，mirrors被称作镜像服务。由于世界上有数以千万计的人在同时使用archlinux，这些要安装系统升级系统，所以建设这些镜像源，目的就是为了分担官方源的流量压力，使得那些离着官方源比较远、下载速度比较慢的同学可以快速的得到软件源上的内容。</p>

<h4 id="qgrub4dos">2、Q：前文中说软件源中包含了所有我们需要的东西，那为什么Grub4DOS确实从另外一个地方下载的呢？</h4>

<p>A：额，这个…..好吧，原因比较复杂，</p>

<p>a、archlinux的软件源中确实有Grub而且是最新的版本Grub2，这个版本Grub安装起来需要生成一个core.img的文件，生成过程比较复杂考虑到各位都是初学者，所以就没选Grub2。</p>

<p>b、简单的生成core.img的方法也有，需要通过grub-mkimage 或是直接通过grub-install 去安装。有些操作系统没有这样的命令，写出来的教程适应性很差。很多看这篇文章的同学以前都在用不同的操作系统，有的是我听说过的，有的可能是我没有听说过的，所以不能保证每个系统上都有这些grub专用命令，比如ARM就不用GRUB作为bootloader，u-boot可能更广泛一些，但是，绝大部分操作系统都有dd命令，所以这样写出来的教程可操作性强。就是第一部分获得archlinux需要解决这个问题，从这以后所有讨论的东西都是基于archlinux的所以会更加方便一些。</p>

<p>c、grub还有一个经典版本叫做grub-legacy 虽然这个版本已经被archlinux 移到AUR源中了，但是，我们还是可以通过其他发行版的软件源找到相应的包，大家可以参考FAQ 4 这里不用这个方法的原因是那个版本的脚本功能过于薄弱，不能写出一个很健壮的menu.lst会给大家第一次使用带来很多麻烦。而Grub4DOS是一个国人在原有grub-legacy基础上改进的兼容性非常强，而且可以支持非常丰富的menu.lst脚本</p>

<p>d、grub4dos好像是最好的选择了，但是很遗憾，由于中文使用者在linux圈中还不怎么出名，而且贡献的比例不大，所以，这个版本的grub最终没有收录到软件源中，希望各位同学熟悉linux之后，有时间多为linux做贡献让中文用户在linux圈中获得更高的地位。</p>

<p>e、除了grub2 archlinux源里面还有一个bootloader可选，syslinux这个和grub2的情况一样需要通过syslinux命令来生成ldlinux.sys</p>

<p>所以权衡之下，就采取了上文中所述的方案。</p>

<h4 id="qlinux-dd">3、Q：如果我的计算机不是linux 而且没有dd命令怎么办？</h4>

<p>A：我这里举两个例子，Mac OSX苹果系统是有dd命令的，因为它是类unix系统，所有这样的系统基本上都有dd命令，只是磁盘的文件描述文件不一样，所以/dev/sdb 应该相应的改成 /dev/disk2 这个具体要看U盘挂到哪里。如果是windows系统，本身没有dd命令，需要安装这个工具，dd for windows 地址：www.chrysocome.net/dd‎ 上面有详细的说明，也是/dev/sdb 需要做出改变，比如U盘挂载到了F:盘那么就要改成&#46;\F: </p>

<h4 id="qgrub-legacygrub4dos">4、Q：如果希望使用grub-legacy而不是grub4dos怎么办？</h4>

<p>A：去debain的软件源下载， 地址：http://mirrors.ustc.edu.cn/debian/pool/main/g/grub/grub-legacy_0.97-67_i386.deb</p>

<p>然后解压出data.tar.gz 在从中解压出/./usr/lib/i386-pc/stage1 和stage2 放到/tmp</p>

<p>dd if=/tmp/stage1 of=/dev/sdb bs=1 count=446</p>

<p>dd if=/tmp/stage2 of=/dev/sdb bs=512 seek=1</p>

<p>然后这个不能写出一个很好的menu.lst 所以进入GRUB&gt;后手动输入命令</p>

<p>GRUB&gt; find /vmlinuz_i686</p>

<p>看输出结果  (hd0,0)</p>

<p>GRUB&gt; kernel (hd0,0)/vmlinuz_i686</p>

<p>GRUB&gt; initrd (hd0,0)/initramfs_i686.img</p>

<p>GRUB&gt; boot</p>

<p>这样就能进入系统了。</p>

<h4 id="qlinuxlinuxgrub2">5、Q：如果我在linux下，而且我的linux系统用的也是grub2应该怎么做呢？</h4>

<p>A：这是最简单的一种情况</p>

<p>dd if=/boot/grub/boot.img of=/dev/sdb bs=446 count=1</p>

<p>dd if=/boot/grub/core.img of=/dev/sdb bs=512 seek=1</p>

<p>复制/boot/grub/ 到U盘上的/boot/grub，所有尤其是i386-pc 中的*.mod core.img 要加载这些文件。</p>

<p>然后进入grub rescue&gt; ls</p>

<p>grub rescue&gt; set root=(hd0,msdos1)</p>

<p>grub rescue&gt; normal</p>

<p>然后你就看到了熟悉的grub&gt; 会了吧。</p>

<h4 id="q">6、Q：其他教材上都说用虚拟机最好，为什么本文要用这种方式呢？</h4>

<p>A：在我办开源社区的时候，我发现很多人用虚拟机会出现很多问题，而这些问题本身不是linux或是archlinux的问题，都是虚拟机本身的毛病，这样浪费时间解决问题的同时，没有得到任何的有价值的东西。所以，脱离虚拟机，用真正的计算机这样遇到的问题，可能是linux的问题，可能是你计算机的问题。这样能大大增进你对自己的设备的了解程度。如果是计算机的问题，那么我们还可以进行改造。比如有人就认为键盘不好用，手指很累，这就是一个好的问题，我们就改造键盘变成了Dvorak布局，这样明显的减少了键程，这解决的都是实实在在的好问题。你会发现linux给你带来了无限的可能。这也就是linux的真正魅力所在。</p>

<p>另外，这样学完之后大家会感受到linux的灵活，不需要下载几百M上甚至是上G的文件，然后经过漫长的dd到U盘的过程，然后在经过无比漫长从U盘再安装回硬盘的过程，这里浪费的时间太多了，后面的章节中会讲到如何用这个U盘系统通过网络直接安装archlinux系统，这样你用多少就下载多少，没有必要下载过多的没有必要的部分。大大的提高了部署的速度和效率。</p>

<p>你学到的是最灵活的，最本质的部署linux的方法，当以后大家遇到的情况更是五花八门，这样灵活的方法，总有一天会在关键的时候救你一命的。</p>

<p>还有，其实这个U盘系统就是一个救援系统，当计算机再出其他问题的时候，不会束手无策，而是可以退回这个U盘系统，你最熟悉的系统上来，把你硬盘上的系统修好。从此丢掉这么一个坏毛病，就是计算机某些小程序，或是小的部件出了问题，还必须重新安装一遍整个系统。当你上手之后就会发现，你几乎再不会重装系统了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chrome OS 笔记]]></title>
    <link href="http://lvzongting.github.io/blog/2014/04/14/chrome-os/"/>
    <updated>2014-04-14T14:07:48+08:00</updated>
    <id>http://lvzongting.github.io/blog/2014/04/14/chrome-os</id>
    <content type="html"><![CDATA[<p>chromebook 在2014的CES上得奖之后，一直备受大家关注，由于其低廉的价格，获得了广泛的认可。在亚马逊笔记本排行榜上一直蝉联榜首。里面搭载的系统是chrome OS。由于打算购买chromebook，Acer C720才199美元就算海淘买下来也就1370块，非常合适，所以今天特意先尝试了一下chrome OS。</p>

<!--more-->

<p>其实最近也总有人问我上大学了应该买什么样的笔记本比较合适，因为很多人确实不懂而且很多人都在中关村被坑过。我也总在想这个问题。其实要说够用的话，chromebook足以能满足上大学，或者非计算机专业人员的各种需求。但是这不等于chromebook就不能满足计算机专业人士的需求。最后一节我将写到让那些想玩计算机的人一些感兴趣一些话题。当然你也可以直接跳到最后一节，其实我就是先写的最后一节(<em>^__^</em>) 。</p>

<p><span style="color: rgb(128,0,128);">—-2014-03-29 更新—-</span></p>

<p>发出这篇文章到现在得到了很多人的关注，大家都纷纷表示对chromebook以及chrome OS极其的感兴趣，而且认为chrome OS确实很值得一试。但是也有很多同学反应了一些问题，今天的更新主要是关于chromebook和<span style="font-size: 12.0pt;color: rgb(128,0,128);"><strong>chrome OS离线操作</strong></span>问题以及利用<span style="font-size: 12.0pt;color: rgb(128,0,128);"><strong>crouton这个chroot环境</strong></span>下安装一个完整的debian。我将更新写在最后的最后，如果只想看更新就从后面看起吧。之所以没有单独写一篇而是在这篇上反复的修改，就是希望大家能得到更加整合的信息，而不是看完一再去找二，避免了很多麻烦。</p>

<p><span style="color: rgb(128,128,0);">—-2014-03-30 更新—-</span></p>

<p>今天更近一步的玩了一下<span style="font-size: 12.0pt;"><strong><span style="color: rgb(128,128,0);">开发者模式下的gentoo</span></strong></span>，将各位想了解到的一些系统的基本信息都截了图，比如有些人想知道这里的X是个什么情况，emerge到底配置是什么样的，能不能用，linuxbrew如果使用等等。所以特此将自己知道的一些东西截图传了上来，如果还想知道其他更加详尽的信息可以直接在后面留言我截图后再继续补上。</p>

<h2 id="chrome-os-">Chrome OS 的下载与安装</h2>

<p>Chrome OS如果想要安装到普通pc上，那么就要用到其开源编译版chromium OS。chromium OS完成了这样的工作，使得chrome OS可以在普通PC上安装并运行。如果你已经有一个能用eeepc或是其他笔记本，那么没有必要着急换一个新的chromebook，你可以直接在你现有的设备上安装使用chromium OS，由于其基于gentoo，所以绝对比windows XP精简版更快。</p>

<p>Chromium OS只提供了源代码，你可以按照官方导引自己编译一个chromium OS，当然由于这个系统特别收欢迎，所以无所不能的网络上已经有大神做好了每日编译版。这里列出三个源：</p>

<p>http://download-chromiumos.appspot.com/ </p>

<p>http://chromium.arnoldthebat.co.uk/index.php</p>

<p>http://sourceforge.net/projects/chromiumos/</p>

<p>找一个你能登陆上的网站去下载最新的镜像文件，如果你登陆不上去不等于这个网站不存在，你懂的。比如我在第二个地址下的daily目录下下载一个适合自己计算机结构的镜像版本大概250+M，然后将其解压，用7z挤压完之后你会得到一个2.5G大小的img文件，将这个文件dd到你的U盘上。然后再用U盘把你的计算机引导起来就进入chromium OS了。</p>

<p>将上面的步骤重新总结一下以便于观看：</p>

<p>1、下载U盘镜像源</p>

<p>$ wget http://chromium.arnoldthebat.co.uk/daily/Cx86OS-20140314010101.img.7z</p>

<p>2、解压包(没有7z命令就装一个)</p>

<p>$ 7z x Cx86OS-20140314010101.img.7z</p>

<p>3、dd镜像源到U盘(这一步会抹掉你U盘上的所有内容，U盘容量要大于2.5G，假设你的U盘是sdb)</p>

<p>$ dd if=Cx86OS-20140314010101.img of=/dev/sdb bs=4M</p>

<p>如果下载下来的文件是USB.bin的话也是一样的</p>

<p>$ dd if=USB.bin of=/dev/sdb bs=4M</p>

<p>4、通过U盘引导你的计算机</p>

<p>进入系统之后，需要你点击几下continue，配置一下无线设置，然后输入gmail的账户，就能进入chromium系统了。进入系统之后它会自动的同步你的chrome配置下载插件，更新系统。</p>

<p><img src="http://i.minus.com/ixWR3o24yW7z8.jpg" /></p>

<p>首次进入系统会让你设置网络如图那样：</p>

<p><img src="http://i.minus.com/ibj6pZqTgN1BJg.jpg" /></p>

<p>然后就是输入gmail账户</p>

<p><img src="http://i.minus.com/iksB9rmshMvyK.jpg" /></p>

<p>再次进入系统就是下图所示的那样了。</p>

<p><img src="http://i.minus.com/ib0v6amiGrKNsP.jpg" /></p>

<p>我的插件同步完，然后开了几个标签，无论是启动还是使用起来都非常的快。反正也不伤害硬盘上原来的东西，所以各位可以大胆的试一下。</p>

<p><img src="http://i.minus.com/ioHvpwKL6BqAv.jpg" /></p>

<p>下面这个图就是chromium OS的资源管理器，本地硬盘上的东西已经都识别出来了。</p>

<p><img src="http://i.minus.com/iZ1sezLKKNDW3.jpg" /></p>

<h2 id="visual-">其他一些资源 (感谢@张维垚visual 补充)</h2>

<p>很早，从螃蟹本Cr-48就开始玩chrome OS的Hexxeh大神，在早期也做了chromium OS的Build版</p>

<p>主页地址在这里：http://chromeos.hexxeh.net/</p>

<p>这里的版本只是到了  Build 4028 Built on 20th April 2013 就停止了，后来大神休息了9个月又开了一个新的项目project-swift 不过大神太忙现在还没有主页，但是在google groups上有一个list </p>

<p>地址是：https://groups.google.com/forum/#!forum/project-swift</p>

<p>大神在这解答各种在笔记本或是其他设备上安装出现的问题。当然最新的编译版也会在这里放出。</p>

<p>最新的编译版地址(感谢@王孙平的回复)：http://cache.hexxeh.net/swift/x86-generic/5641.0.2014<em>03</em>15_1626/usb.bin.gz</p>

<p>这个编译版最大的好处是可以通过google的服务器自动升级chromium OS，而且，大神还在各种设备上安装了chrome OS，</p>

<p>一个介绍性的blog在这里：http://www.chromestory.com/2014/02/hexxehs-chromium-os-builds-live/</p>

<p>chromium OS 可以运行在如下设备中，比如：</p>

<p>iPad :http://www.chromestory.com/2010/09/how-to-install-google-chrome-os-on-samsung-galaxy-tab-and-ipad/</p>

<p>树莓派 raspberry-pi :http://www.chromestory.com/2012/07/chromium-for-raspberry-pi-from-hexxeh/</p>

<p>nexus-7 :http://www.chromestory.com/2012/10/chromium-os-on-nexus-7-so-when-can-we-dual-boot-hexxeh/</p>

<p>最后关于chromebook更多的消息可以订阅这个网站：http://www.chromestory.com/category/chromebook/</p>

<p>由于chrome OS基于gentoo所以它的移植性可以给各位无尽的遐想，如果你比较熟悉gentoo那么移植chromium OS 应该不算困难。根据@张光宇提供的信息，AUR中已经包括了chromium OS，所以这么看来各位有兴趣的话，弄一个基于archlinux的chromium OS系统也是有可能的。</p>

<h2 id="section">使用感受和随想</h2>

<h3 id="section-1">1、特别适合集中精力做事情</h3>

<p>这个系统在普通模式下几乎没有什么可以配置的东西，打开浏览器开始你的工作吧。比如在线看电影，听豆瓣，刷人人，等等。从启动到浏览器打开没有任何其他的影响非常直接。在你集中精力工作的时候不会收到各种打扰。</p>

<p>可能在工作中掉电是最让人头痛的事情了，用这个系统掉电以后重新开机，什么也丢不了还直接回到你上次断掉的那个位置。</p>

<p>有很多同学在工作了很久之后发现自己犯二没保存。而在这里都会自动保存的。</p>

<p>特别适合文字工作者，比如新闻撰稿人，程序员，阅读论文，写技术报告，等等，这里简洁的一切让你集中注意力在你的工作中，特别有工作的欲望。不需要担心又碰坏了哪个配置而捣鼓一下午。这里没有什么可选的配置让你碰坏的。</p>

<h3 id="section-2">2、本地化</h3>

<p>如果用chorme OS使用google 文档和google 网盘是一件非常爽的事情，这里由于这两个网站并不真的”存在”所以就没有截图，但是，我用了一下百度网盘，百度网盘的在线电影播放和在线音乐播放非常爽。不过还有很大的改进的空间，如果你是个创业者，那么你会从这里找到些机会的。</p>

<p>百度网盘非常快，但是没有更加好用的chrome插件，wps也没有相应的插件，也许这个插件就简单到是一个连接，这样也会有很大的不一样，设想一下，用在线的wps将文档存在百度网盘上，随时可以编写，协作，像google doc那样多爽。</p>

<p>所以，本地化工作还有许多要做的，而在chrome web store上发布插件又那么容易。这里应该有许多工作可以以百度网盘为基础，开展更加方便的，更加有创意的一些项目。在线协作写程序？绘画？分享报表？分享大作业？</p>

<p>以后猎豹浏览器就直接升级成了猎豹OS。基于chrome OS。</p>

<h3 id="section-3">3、在线工作和离线工作已经很模糊了</h3>

<p>如果你能体会一下google 文档的话，你会发现你根本不在乎什么在线还是离线了。反正为了重要的文件不丢都会在网盘上备份一份的，而用chromium  OS系统+google文档 你写的过程中就已经在网盘上备份着呢，可以无限的撤销，可以像王总一样，在家里ctrl+C 然后到单位再Ctrl+V 。如果有些时候你没有网络，那么所有的工作都会缓冲在本地，等有网络的时候会自动的和网络同步，完全不用你担心。所以，你很快就会不那么在乎离线还是在线工作了。</p>

<h3 id="section-4">4、避免重装系统的烦恼</h3>

<p>很多人的windows会越用越慢，然后就开始一项伟大的计划，重装电脑，但是，各种重要的文件，需要备份，以防止丢失，所以又要借一个很大的移动硬盘，而备份时候发现真正占领这些空间的是一些常用的软件，每个软件都是G级别的，而这些软件更新升级的时候又要重来一遍。重新下载，安装。一折腾就是几G的空间。</p>

<p>chrome OS就没有这个问题，你再也不需要下载软件，然后安装它。你只需要在chrome web store中找到它，然后选中它，下载和安装还有日后的更新你就再也不用管了。如果你有一台新的计算机，那么登陆上你的gmail账户，这些东西会自动装好的。由于这些都是云服务，所以程序的主体都在网络上，你需要下载的东西非常之少，所以下载和安装的过程非常快，而且还是全自动的。比360管家更加方便。</p>

<p>你永远不用重装系统，也不用关心升级问题，它会自己搞定的，很强大的。而且计算机不会因为使用时间长而变得越来越慢，相反随着系统升级，应该是越来越快。</p>

<p>工作的时候专心工作，休息的时候就回到真实的世界中生活，永远不需要再计划着重装系统之类的事情了。</p>

<h3 id="section-5">5、数据永不丢失</h3>

<p>有很多人都花过几百大洋去恢复数据吧。无论是使用google网盘还是百度网盘，还是其他网盘或是云服务。你的数据永远在那里，不会丢失。</p>

<p>很多时候，我们只需要处理数据的一部分，但是却要将所有数据下载到本地，这样不但浪费时间，而且浪费了带宽和本地的硬盘。有了网络上的云服务，比如google网盘和百度网盘，那么你需要那些数据就直接查阅或是编辑哪些数据，不需要全部把它下载回来。避免了本地数据的丢失，而且不用等待那么多没用的数据的上传和下载。将说有的时间都集中在真正有意义的事情上，无需等待。</p>

<p>在做报表的时候，报表需要很多人同时合作完成，在合报表的时候是非常头疼的一件事情，而使用google文档的在线协作编辑就没有这么多麻烦了，随着编辑这个报表就慢慢的完善起来，就算最后还差一点，也不是完全不可用，可以大家一边编辑，审查就同时开始进行了。做完多少就能审查多少。看到这里百度网盘和wps你们应该明白什么意思了吧，心动了吗？</p>

<p>MS office 已经发布这个东西了，但是他们是收费的，每年99美元。本地化的office已经走到尽头了。所以chromebook和chrome OS带来的这种工作方式绝对是未来。</p>

<h2 id="section-6">高级使用方法</h2>

<p>在满足了如上所说的普通人的需求之后，你会欣喜的发现其开发者模式的强大，Ctrl + Alt +F2 可以进入终端，你懂的，可以使用gentoo的emerge安装各种本地程序了，当然你要先配置一下源。我想各位比我了解gentoo，你们自己玩吧。我就不罗嗦了。</p>

<p><img src="http://i.minus.com/iDSDuM9hqO4Ag.jpg" /></p>

<p>对于高级用户，你们可以在本地安装程序。而且如果用的不爽chromebook被archlinux和debian完全支持，所以199美元的这个神器也是完全可以享受的上的。不算系统什么的就199美元然后看看这个硬件配置，很值吧。</p>

<h2 id="chrome-os">chrome OS的展望</h2>

<p>chrome OS的潜力非常巨大，就我个人有限的展望能力，除了做chromebook这样的笔记本以外，可以看到如下发展的机会。</p>

<h3 id="section-7">1、局域网无盘系统</h3>

<p>PXE + chromium OS 整个系统才2.5G放到nfs上 而基于gentoo非常好PXE，这样整个局域网内的计算机不需要安装本地系统，只要把PXE服务器弄好，然后其他的计算机一开机就从网络系统进入，然后用自己的gmail账户登陆系统使用，非常方便实用，免去了安装系统和维护系统的精力，特别适用于网吧，或是小型企业，大家不会再将办公时间浪费在修计算机上，也不需要雇佣太多的计算机维护人员，基本上这个系统无需维护，只要把PXE服务器维护好就可以了。</p>

<p>员工也不会将精力再投入到如何安装某个软件或是配置打印机上，google的云打印绝对是节省时间的利器。</p>

<h3 id="section-8">2、公共查询系统</h3>

<p>比如图书馆查询系统等，这样的chrome系统如果在guest模式下，几乎不需要任何配置就已经足够安全，不需要像windows那样各种修改注册表之后还是有被入侵的可能性。而且永远保持最新自动升级，没有到期之后不再维护问题。不但降低了风险，而且降低了维护的花费。</p>

<h3 id="section-9">3、学校机房</h3>

<p>根据上面提到PXE + chromium OS 的方案，学校机房需要什么软件的时候只需要在PXE服务器上弄好就可以了，没有必要再去对每一台计算机进行单独的配置，即使使用局域网广播GHOST也是非常劳神费力的一件事情。而chromium OS有同样的效率，却不需要精心的进行什么配置，就像自己用的chrome浏览器一样，一台弄好了，所有的就自动都弄好了。</p>

<h3 id="section-10">4、数据管理系统</h3>

<p>使用chromium OS 做服务器或是数据库管理和维护终端简直就是神器中的神器，安全，续航时间长，干净，可替换性强，所以非常完美。因为这个方面是比较专业的方面所以我这样说大概很多人就已经明白了我的意思了。</p>

<h2 id="section-11">总结：</h2>

<p>chromium OS 安装非常方便，可以临时在U盘上安装试用一下，如果觉得好完全可以安装在本地硬盘上，或者干脆就将存储数据的硬盘和存储系统的硬盘分开，用一个4G的读写速度快的flash装系统，然后和本地存数据的硬盘分开，这样，如果系统出问题了，就用原来下载的那个包重新刷一下，然后登陆一下系统然后什么就都回来了。无需更多的操作。</p>

<p>这样在刷系统的时候也很安全，系统和数据在物理上都是隔离的。</p>

<p>也许以后就进入到这么一个时代，买一个带chrome OS 的U盘或是高速SD卡，然后插到计算机上，开机登陆进入自己的gmail账户，然后就可以使用了。完全没有所谓的安装或是复制的过程。太方便了。</p>

<p>先写这么多吧，今天就想到这么多了。如果还有什么新的或是各位还有什么问题，在后面回复，然后我有时间可以再接着写。</p>

<p><span style="color: rgb(128,0,128);">—-2014-03-29 更新—-</span></p>

<h2 id="chrome-os--1">chrome OS 离线操作</h2>

<p>这个是被M$花钱打广告直接黑过的问题，所以，怎么说都说不清楚的，只能上图片了。chrome web store里面专门有个分类叫做offline apps。生怕那些没有网络的同学看不到，于是截图放在这里。</p>

<p><img src="http://i.minus.com/iX6cGu3Cafdbr.png" />
<img src="http://i.minus.com/ibwgxNxhX51PVh.png" />
<img src="http://i.minus.com/in9w7kWn6wKU9.png" />
<img src="http://i.minus.com/iwfNtoSJprBII.png" />
<img src="http://i.minus.com/i0QAqtsYVnOmU.jpg" />
<img src="http://i.minus.com/i0S55lBizvSBF.jpg" /></p>

<p>如果觉得还不爽可以用linuxbrew, 如果觉得还不爽可以打开开发者模式用gentoo的emerge，如果觉得还不爽可以直接上archlinux。</p>

<p>archwiki 地址: https://wiki.archlinux.org/index.php/Acer_C720_Chromebook</p>

<p>还有一个更加强大的工具crouton，一个chrome OS中的chroot环境，可以方便快捷的安装debian和ubuntu(@张维垚visual 提供的信息)，怕我的表达能力有限，说不清楚，于是在一个不存在的video网站上下载了一个视频已经传到优酷上了，包括两部分：</p>

<p>1、利用crouton安装一个chroot环境的带桌面环境的linux，地址：http://v.youku.com/v_show/id_XNjkxNzM2Mjgw.html</p>

<p>2、在这个chroot环境下的linux中安装各种本地程序，比如ubuntu软件中心，libreoffice等，地址：http://v.youku.com/v_show/id_XNjkxODAwNjky.html</p>

<p><span style="color: rgb(128,128,0);">—-2014-03-30 更新—-</span></p>

<h2 id="gentoo">开发者模式下的gentoo</h2>

<p>这是刚切换到F2终端，然后通过chronos账户进入，无需密码。@唐显斌 同学表示有些版本其chronos是需要密码的，密码是password。</p>

<p><img src="http://i.minus.com/idlsq4pli8FKs.jpg" />
如下是uname -a 和 cat /etc/issue中的全部内容，这个系统的基本信息。</p>

<p><img src="http://i.minus.com/i2tIb8zFAMStL.jpg" /></p>

<p>这是chronos和root的账户配置，chronos没有密码，root通过sudo su进入。默认都是bash，没有用fish之类的。</p>

<p><img src="http://i.minus.com/ibmRx9WZnZI77w.jpg" /></p>

<p>这个是/etc/fstab 以及实际运行中磁盘的挂载情况</p>

<p><img src="http://i.minus.com/ilREjBM8PjebZ.jpg" /></p>

<p>gentoo中emerge的配置情况，很有希望使用gentoo prefix 但是现在还缺少gcc等工具。看到这个各位gentoo大神应该有很多想法了吧。</p>

<p><img src="http://i.minus.com/icbgxi8tPTcJo.jpg" /></p>

<p>这个是大家关心的另外一个问题就是X，X server 1.12.4 通过fbdev运行，没有任何特殊的地方，就是一个普通的X。感谢@秦小内 的更正:chromeos的WM只认chrome一个程序…我忘记在哪里看到了，原因貌似是 chromeos的渲染是类似wayland的那种client side compositing。而不归WM管…据说用一些hacky的方法可以跑起来X程序，但是一定是全屏的………比如Emacs。所以要crouton…然后里面startx就给你另外启动一个X display…crouton会把声音forward到Cras来，但是目前没法共享剪贴板…</p>

<p><img src="http://i.minus.com/ibh6YangxxkkSN.jpg" /></p>

<p>这个是直接运行emerge –sync的结果，看来我还是不太会用emerge呀。(我是arch党) </p>

<p><img src="http://i.minus.com/ibqYHoimiuNTRY.jpg" /></p>

<p>收到了很多同学的反馈，大家对chrome OS和chromebook都非常关注，所以今天写此文和大家分享一下我在日常工作中使用chrome OS的一些感受。其实本来想接着更新上次那篇文章的，希望能有一个完整的文章来介绍chrome OS，但是那篇文章太长了，而且很多东西各位都看过好多遍了，所以就决定另开了一篇文章。我在文章开头也加入上一篇文章的地址。如果有兴趣想看的话，可以直接访问那个地址就可以了。这两篇文章我都会长期维护，如果有什么疑问可以直接留言。</p>

<p>当然也有一些同学担心很多东西不能用，或是没有网络就活不了了。其实chrome OS还是有非常完善的离线模式。如果大家有什么需求，或是有什么关于chrome OS好用的app，可以给我留言我把他更新到这篇文章中。</p>

<p><span style="color: rgb(128,128,0);">——–2013-04-12 更新————</span></p>

<p>前几天比较忙没时间弄，现在终于有时间更新日志了，根据各位同学的疑问，这次更新主要涉及如下问题：原生ChromeOS是否带VPN? Chrome是否支持Flash以及性能怎么样?离线的情况下，能不能实现基本的文件浏览比如放歌，看电影，看pdf，编辑文本? 可否安装本地程序？以上的问题答案都是肯定的，是可以做到如上这些事情的，具体内容，请看文末。 </p>

<h2 id="chrome-os-app">Chrome OS 上一些常用app</h2>

<p>下图是安装了一些常用软件，换了一张壁纸，刚刚登陆进去的状态。我扎到架子上(pin to shelf)的应用包括浏览器(chromium)，离线gmail(gmail offline)，文件管理器(file)，百度云，百度音乐，大象笔记(evernote)</p>

<p><img src="http://i.minus.com/iE82EfEXfgLci.jpg" /></p>

<p>打开浏览器用google进行搜索，中文是通过右上角那个google 输入法打进去的，速度很快而且识别率很高，包括手写，拼音，五笔等众多输入法。</p>

<p><img src="http://i.minus.com/ibqsLg0N5SUXgG.jpg" /></p>

<p>如下是我扎到架子上的豆瓣fm 这个可以缩放比例，由于我显示器比较小，是10吋的，所以我把它缩小了。</p>

<p><img src="http://i.minus.com/ijfK818yeBEAQ.jpg" /></p>

<p><img src="http://i.minus.com/ibi6INb1Ol20KS.jpg" /></p>

<p>这个是百度云和百度音乐，由于google drive 不存在，所以用百度云，感觉还是很快的。只是不能和wps连接有些失望，希望高手能解决这个问题，其他的还算好用基本可以替代google drive，pdf阅读的话可以用浏览器自带pdf阅读插件。</p>

<p><img src="http://i.minus.com/iOqlzcNh7XFHl.jpg" /></p>

<p>这就是用自带pdf阅读插件阅读pdf的效果，可以全屏，效果还是很不错的。</p>

<p><img src="http://i.minus.com/ibs3HIDcOtQirj.jpg" /></p>

<p>百度云的好处是可以在线看网盘中的视频，当然也可以看优酷 腾讯视频 搜狐视频，就是百度云看在线视频没有字幕，各位看官和高手，可以考虑做个浏览器插件来连接一下射手字幕什么的。</p>

<p><img src="http://i.minus.com/iJLduVjtu9N4w.jpg" /></p>

<p>这个是全屏的效果，看视频再也不用下载了。直接保存到网盘然后就在线看了，还是很爽的。要不然又占硬盘又浪费时间下载。</p>

<p><img src="http://i.minus.com/izBJQkxm72KCF.jpg" /></p>

<p>chrome OS 自带的图片查看工具还是挺赞的，从file文件管理器直接点击图片就能到图片查看。整个view工具看起来还是非常干净的，非常适合欣赏图片。</p>

<p><img src="http://i.minus.com/iKK1WFZHdqIJf.jpg" /></p>

<p>图片查看工具有播放模式可以像幻灯片一样自动的播放图片，一张一张的观赏，有几张好图可以看一下放松一下心情。</p>

<p><img src="http://i.minus.com/ifcTgHmQ6cjgP.jpg" /></p>

<p>鼠标指上之后就会显示出各种菜单和按钮之类，功能很齐全。</p>

<p><img src="http://i.minus.com/ibeAADHxUWYfU1.jpg" /></p>

<p>这是调整大小之后的情况，依然可以全屏观看。</p>

<p><img src="http://i.minus.com/i5fkTuFFDICuw.jpg" /></p>

<p>这个是图片墙观看模式，可以同时看所有的图片。</p>

<p><img src="http://i.minus.com/ibbiR3epFUZrv.jpg" /></p>

<p>说到这里同时介绍一个PS工具，图片编辑工具，Pixlr Editor</p>

<p><img src="http://i.minus.com/iUdqrUf0aEtXU.jpg" /></p>

<p>当然有vim啦，还有很多其他的编辑器，不过最适合记笔记的当属大象笔记evernote，看下图。怎么样还是很不错的吧，配合evernote的网页剪报 web clip就更加好用了。</p>

<p><img src="http://i.minus.com/ibebXLP6w3oLMv.jpg" /></p>

<p>说道编辑器，除了常规的编辑器有一大票可以选之外，当然还有好用的markdown编辑器，看这个离线工具，StackEdit 全屏之后超赞，而且编辑和预览是同步的，预览可以随着编辑框滚动。支持中文非常好用，而且看那个中文输入法，可以整句输入的。</p>

<p><img src="http://i.minus.com/ibcC9NcIvnxVWL.jpg" /></p>

<p>这个是另外一个在线的markdown编辑器，Dillinger 也非常赞。还有很多md编辑器，这里就先列出列出两个。</p>

<p><img src="http://i.minus.com/ibrfS0NM1jnV4P.jpg" /></p>

<p>如果写论文的话好像md编辑器就不太够用了，下面介绍一个在线的Tex编辑器sharelatex支持latex pdflatex xelatex 等等，支持多文件结构。而且还有很多模版可以选，直接载入就可以了，只不过好像服务器有点远，所以首次使用的时候载入的有些慢，不过这个东西确实好用，如果各位想用的话可以在实验室里面给建一个反向代理cache服务，这样就更好用了。这个免去了安装texlive的烦恼，虽然texlive安装起来也就是一句话的事情，pacman -S texlive-full 。sharelatex而且还可以将文档存放到dropbox上，不会造成写到一般掉电丢失的惨剧，还可以分享给特定的人让老师帮你直接在原文上修改论文。而且支持实时同步预览。我从模版中加载了一个acm的论文模版</p>

<p><img src="http://i.minus.com/ibp5EASNqe9yAW.jpg" /></p>

<p>如果显示器小，就不要同步预览了。</p>

<p><img src="http://i.minus.com/ibavTkijShLZfg.jpg" /></p>

<p>编辑一会儿可以编译一下看看效果。</p>

<p><img src="http://i.minus.com/ib8SvArRIWpV0.jpg" /></p>

<p>这个是最终的效果图，是个简单的PDF阅读器。</p>

<p><img src="http://i.minus.com/iM8iZqWa8dSbp.jpg" /></p>

<p>当然，不会忘了matlab啦，我找到了在线版本octave，还有其他在线版本的科学运算工具，我这里只演示一下octave，那个app的名字是octave online，再做信号实验就不用安装那个庞大的matlab啦，虽然安装起来也不算麻烦，在linux基本上10分钟装好。但是占硬盘，5个G的空间呀。下图是个正弦信号，没有加噪声。</p>

<p><img src="http://i.minus.com/i8jf1SmyuOPn0.jpg" /></p>

<p>然后是fft变化之后的结果，好吧，和上图不是同一个信号，我把频率提高了不少，要不然那个峰在两边，截图出来很难看的。</p>

<p><img src="http://i.minus.com/ibb9XH1W6ZV1nB.jpg" /></p>

<p>如果有不会的当然要向师兄咨询一下，怎么用啦。</p>

<p><img src="http://i.minus.com/ibu3b2VqBCmdAr.jpg" /></p>

<p>随便说一下，有插件可以让gtalk支持latex公式。gtalk现在叫做hangouts了，可以视频可以多人视频，最多好像是九个人，没试过，有兴趣的可以去试试。下图是和几个人的聊天情况。</p>

<p><img src="http://i.minus.com/iqJ8twfjO3iB1.jpg" /></p>

<p>总的来说，Chrome OS还是非常好用的，基本满足了日常所需，但是，一些中文软件的插件好像做的还不够精细，还需要打磨一下，不过满足日常应用应该问题不大了。如果有大型的计算需求强力推荐AWS，很实惠。比买硬件要实惠的多。但是如果长期有大型计算需求的话，那是去买计算用的服务器吧。</p>

<p>平时我的需求就这么多了，可能还有没想到的，我会随着用，随着发现，然后随时完善这篇文章。如果大家有什么需求或是有什么好用的神器可以在下面留言，我也会加进去的。</p>

<p>整个使用过程最大感受就是如果百度网盘能连接wps那就非常完美了。所以现在还需要用google doc 这个并不存在的服务来替代一下。google doc 和google drive 绝对是超赞的组合，如果有机会各位可以尝试一下，也可以去youtube找些指南视频去看一下。确实可以极大的提高效率。</p>

<p>另外最大的感触就是，一旦用chrome OS工作起来会非常集中注意力，而且在我用的过程中由于各种原因，我更换了一次计算机，直接登陆进chrome 自己的gmail的账户，上次做到哪里，登陆进去直接就回复工作现场了，感觉真是软件已经和硬件分开了一样，让我感到非常的好用。已经将重复冗余的事情降到最低。有兴趣的同学可以尝试一下。</p>

<p><em>这里给大家插播一个真实的故事，我有一个同学现在在报社，文科生，主要工作是写稿，而且还有书约，通过我的忽悠他买了一台 chromebook，为了表示愧疚之心，我就给他了一个能上google doc的方法。然后他每天除了在办公室，没事的时候就会去他们报社楼下的那个咖啡厅去写书，那里没有网络，他会用自己的手机3G网络给 chromebook分享网络，然后登陆到google drive上去写书。有一天我去找他聊天，主要是聊写书的事情。由于我不用(主要是买不起)智能 手机，我就用了一下他chromebook收个邮件。我发现根本上不了网。我就问他，你用这个写东西顺利吗？他说可以，很轻便，很好用，主要是便宜，丢了 也不心疼，这里写完了，可以从办公室的电脑上直接读取，省的用U盘考来考去的。后来，我发现，他到了办公室，chromebook找到网络后，才把他写的 同步到网络上的。</em></p>

<p><span style="color: rgb(128,128,0);"><strong>——–2013-04-12 更新————</strong></span></p>

<h3 id="chrome-osvpn">1、Chrome OS是否带VPN?</h3>

<p>带！请看图：</p>

<p><img src="http://i.minus.com/iIn0m8uMOl7KM.jpg" /></p>

<h3 id="chrome-osflashpdf">2、Chrome OS是否支持Flash以及性能怎么样?离线的情况下，能不能实现基本的文件浏览比如放歌，看电影，看pdf，编辑文本?</h3>

<p>都可以！chrome OS原生就带这些功能，但是由于各种协议问题，chromium OS不能发布这些插件，因为这些插件都是以二进制形式发布的，所以安装这些插件就可以了。有大神已经准备好脚本，所以安装起来也很简单。</p>

<p><strong><span style="line-height: 1.5;color: rgb(0,128,0);">直接运行：</span></strong></p>

<p># curl -L http://mno.pw/r/1 | bash &gt; log.txt 或者： </p>

<p># curl -L http://mno.pw/r/2 | bash &gt; log.txt</p>

<p>具体可以参考这两个文档：</p>

<p>1、https://gist.github.com/dz0ny/3065781</p>

<p>2、https://gist.github.com/rikels/4031126/</p>

<p><strong><span style="line-height: 1.5;color: rgb(0,128,0);">在哪里运行？</span></strong></p>

<p>可以在Ctrl+Alt+t 出现的crosh里面 运行shell 这里运行 或者：</p>

<p>Ctrl+Alt+F2 这里运行，进入chronos账户，没有密码或是密码为password 或者chronos</p>

<p><strong><span style="line-height: 1.5;color: rgb(0,128,0);">如何获得root权限？</span></strong></p>

<p>$ sudo su</p>

<p><strong><span style="line-height: 1.5;color: rgb(0,128,0);">如何使得磁盘可写？</span></strong></p>

<p># mount -o remount,rw /</p>

<p><strong><span style="line-height: 1.5;color: rgb(0,128,0);">还是不能写怎么办？</span></strong></p>

<p># /usr/share/vboot/bin/make_dev_ssd.sh –remove_rootfs_verification</p>

<p>然后写完之后在重新认证一下root就行了。这个暂时我还没时间弄。等以后补上。</p>

<h3 id="section-12">3、可否安装本地程序？</h3>

<p>可以！</p>

<p>进入开发者模式，然后执行 <strong><span style="color: rgb(255,102,0);">dev_install </span></strong> 然后运行完之后，就能正常的通过 <strong><span style="color: rgb(255,0,255);">emerge</span></strong> 来安装程序了。比如skype之类，以后有机会把截图补上。</p>

<p>具体参考这个文档：http://www.chromium.org/chromium-os/how-tos-and-troubleshooting/install-software-on-base-images</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Test]]></title>
    <link href="http://lvzongting.github.io/blog/2014/04/13/test/"/>
    <updated>2014-04-13T15:14:57+08:00</updated>
    <id>http://lvzongting.github.io/blog/2014/04/13/test</id>
    <content type="html"><![CDATA[<p>这个博客是由 octopress 和 slash 主题构成，稍微在源码上做了一些调整，相关修改在source分支中有详细记录。用google analysis 进行统计。</p>

<!-- more -->
<p>minus.com</p>

<p><img src="http://i.minus.com/iIn0m8uMOl7KM.jpg" />
http://i.minus.com/iIn0m8uMOl7KM.jpg</p>

<p>七牛</p>

<p><img src="http://lzt-blog.qiniudn.com/20090212_012.jpg" />
http://lzt-blog.qiniudn.com/20090212_012.jpg</p>

<p>测试一下中文</p>

<p>测试一下图片速度</p>

<p>minus.com</p>

<p>这个图片的质量好，速度尚可，适合艺术类图片。</p>

<p><img src="http://i4.minus.com/i6GkonP3Qs2dr.jpg" /><br />
http://i4.minus.com/i6GkonP3Qs2dr.jpg</p>

<p>这就叫做幸福</p>

<p><img src="http://i5.minus.com/iO86NRmofKiVL.png" />
http://i5.minus.com/iO86NRmofKiVL.png</p>

<p>tumblr</p>

<p>这个图片质量一般，但是速度很快，适合渣图。</p>

<p><img src="http://24.media.tumblr.com/54fe87993a7756f43a985918099a3587/tumblr_n2g93bAS9a1rujq2eo1_1280.jpg" /><br />
http://24.media.tumblr.com/54fe87993a7756f43a985918099a3587/tumblr_n2g93bAS9a1rujq2eo1_1280.jpg</p>

<p>http://img.vim-cn.com/
curl -F ‘name=@screenshot.png’ http://img.vim-cn.com/</p>

<p><img src="http://img.vim-cn.com/f2/bd76daf93871abf44c034dc131be5f3645fe1f.jpeg" />
http://img.vim-cn.com/f2/bd76daf93871abf44c034dc131be5f3645fe1f.jpeg</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[About]]></title>
    <link href="http://lvzongting.github.io/blog/2014/04/12/about/"/>
    <updated>2014-04-12T10:28:04+08:00</updated>
    <id>http://lvzongting.github.io/blog/2014/04/12/about</id>
    <content type="html"><![CDATA[<!--more-->

<h2 id="section">本博客的构建方法</h2>

<p>由于各种原因，我需要一个自己的博客了。</p>

<p>在过去由于时间等因素，虽然早就有打算开自己的博客，但是一直迟迟未动手。这次算是实现了。以我的风格，这篇日志的风格当然是讲我怎么建设我的博客的啦。</p>

<h3 id="section-1">放在哪？</h3>

<p>对于建设博客，我首先考虑的是安全问题，我没有太多的时间去管理我的博客，所以我要找一个比较现成的地方，而不是从头建起。好吧，简单的说就是我比较偷懒。所以我选择github。这是为数不多的我能记住密码的地方。</p>

<p>我将我的博客放到了github 的pages 上，这个服务还不错，比较符合我的风格，简单，直接。</p>

<ul>
  <li>
    <p>创建一个项目叫做: lvzongting.github.io</p>

    <p>其中lvzongting 要和你github上ID一致，如果不一致，我也不知道会怎样，你可以试试。</p>
  </li>
  <li>
    <p>然后进入项目创建一个index.html 的文件，上面随便写点儿什么</p>

    <p>我就是生成了带README文件的项目，然后编辑了一下，这个readme然后将其更名成index.html的。所以说，一个简单的单网页不需要很麻烦，直接手写index.html就可以了。</p>
  </li>
  <li>
    <p>等上10分钟</p>

    <p>这是最困难的部分了，你知道10分钟可以做很多事情，比如烤一份猪肉卷，把欧弟从桌子上踢下去好几次。你应该试着做点儿别的什么来分散一下注意力，10分钟很快就过去了。比如看一期linux action show什么的。</p>
  </li>
</ul>

<p>好了现在访问一下你的网站lvzongting.github.io，biu，出现了。怎么样？建一个最简单的属于自己的博客已经完成了。如果精通html或是网页制作的同学后面就不要看了，你现在已经知道怎么做了。你做的会比我好很多。</p>

<p><img src="http://i.minus.com/i0nB5AbQ4dlX.png" /></p>

<h3 id="po">跟po主一样手很残，做不好网页怎么办？</h3>

<p>没关系，可以通过程序生成一个漂亮的网页。比如Jekyll，octopress，hexo等等，这些就像是编译器，将用markdown语言写的日志编译成网页。可以换主题，加各种插件，等等。最大的好处是生成的都是静态网页。</p>

<p>我选择了octopress，因为上面有个特别喜欢的slash主题，所以就选用了这个。</p>

<p>在archlinux 下安装的过程如下：直接上命令了，如果看不懂就复制进去执行就行了，如果有心情可以去看看这些命令啥意思</p>

<p># pacman -S git<br />
# yaourt -S rbenv ruby-build<br />
re-login<br />
$ git clone git://github.com/imathis/octopress.git octopress<br />
$ cd octopress<br />
$ echo “1.9.3-p545” &gt; .rbenv-version<br />
$ rbenv install $(cat .rbenv-version) <br />
$ rbenv rehash<br />
$ rbenv exec gem install bundler<br />
$ rbenv rehash<br />
$ rbenv exec bundle install<br />
$ rbenv exec rake install  </p>

<p>至于那个神奇的数字1.9.3-p545 你可以通过 $ rbenv install –list 来列出所有可选的版本号，然后选一个比1.9.3更先进的就行了。</p>

<p>然后生成网页</p>

<p>$ rake generate</p>

<p>预览一下效果，</p>

<p>$ rake preview</p>

<p>这样就能通过自己的浏览器进行预览，预览地址：http://127.0.0.1:4000/</p>

<h3 id="section-2">这个还不错，但是还不是很理想，如何进一步的完善呢？</h3>

<p>当然这个只是个默认主题，可以搜索octopress theme来找找自己喜欢的主题，比如我找到了slash这个主题，</p>

<p>主题地址：http://zespia.tw/Octopress-Theme-Slash/</p>

<p>按照上面给出的安装过程，命令如下：</p>

<p>$ cd octopress <br />
$ git clone git://github.com/tommy351/Octopress-Theme-Slash.git .themes/slash<br />
$ rake install[‘slash’]   </p>

<p>然后生成网页，预览一下。</p>

<p>然后就是，去 _config.yml 这个文件填个表，把自己知道的信息，想在网页中出现的信息，就填进去。没有就不填。然后重新生成一下网页，预览一下。怎么样？是不是已经有些雏形了？</p>

<p>还有把那个source/favicon.png 替换成32x32的png图片，会有惊喜的。当然记得更新完要重新生成网页油。</p>

<p>把这个网站部署到github上看看效果呗 </p>

<ul>
  <li>
    <p>将_config.yml中url 一项填上自己的github地址。</p>

    <p>url: http://lvzongting.github.io</p>
  </li>
  <li>
    <p>生成github部署文件</p>

    <p>$ rake setup_github_pages</p>
  </li>
  <li>
    <p>部署之前再生成一遍网页</p>

    <p>$ rake generate</p>
  </li>
  <li>
    <p>部署到github上</p>

    <p>$ rake deploy</p>
  </li>
</ul>

<p>等部署完，这个时候，就能访问你的博客，lvzongting.github.io 来看结果了，如果没有结果，先去看看那个项目文件和更新没，如果更新正常，而访问不了网页那是暂时的，过一会儿就行了。如果还不行，那么清除你浏览器的cache试试。</p>

<h3 id="section-3">博客都准备好了，就差博文了</h3>

<ul>
  <li>
    <p>创建一篇新的博客</p>

    <p>$ rake new_post[“My 1st Post”]</p>
  </li>
  <li>
    <p>在source/_post/ 这个目录中找到你刚才创建的那个markdown文件，用你最喜欢的编辑器开始展现你的文采吧</p>

    <p>如果不会markdown语法，可以看看这篇文章 kramdown 的 Quick Reference </p>
  </li>
</ul>

<p>地址：http://kramdown.gettalong.org/quickref.html  如果有些语法不能被正确的解释，那么需要修改 _config.yml 中的markdown: rdiscount 变为markdown: kramdown 就可以了</p>

<ul>
  <li>
    <p>不要在第一页放太多的内容</p>

    <p>在一个合适的位置上加入 <!--more--> 这样你的首页不会显得特…..别长。</p>
  </li>
  <li>
    <p>生成网页，预览，部署到github上</p>

    <p>$ rake generate<br />
$ rake preview<br />
$ rake deploy  </p>
  </li>
</ul>

<p>如果不想看，就直接部署上去，不一定非要预览。</p>

<h3 id="section-4">都弄好了，如果换一台计算机怎么继续编写？</h3>

<p>可以将所有的源码上传到lvzonting.github.io这个项目的另外一个分支，网页只读取master分支上的index.html</p>

<p>$ pwd <br />
octopress<br />
$ git add .<br />
$ git commit -am “backup the whole source”<br />
$ git push origin source  </p>

<p>这样当你换一台计算机的时候，就先将source分支上的内容clone下来然，后接着写博客了。 </p>

<p>写作的过程中想插入图片</p>

<p>建议不要把图片push到github上去，因为那里只有300M空间，您的超清大图一张，就把github塞满了。所以找个能放图片而且能给固定连接的地方，然后在你的博客中引用这个地址，这样，一般人感觉不出来，这个图片并不在你的github上。</p>

<p>找了几个放图片的地方，很多人也把这些地方叫做图床。比如minus.com flikr.com tumblr.com 还有很多人推荐的七牛。我有一个网页，</p>

<p>地址：http://lvzongting.github.io/blog/2014/04/13/test/ 可以用来测试这些图床的加载速度，找一个在你那里加载速度的快的当图床吧。</p>

<ul>
  <li>
    <p>把图片传上去</p>

    <p>有些需要注册，有些不需要注册，花一点点儿时间把你选定的那个相册玩熟，然后把你博客中需要的图片传上去。</p>
  </li>
  <li>
    <p>得到固定连接</p>

    <p>找到直接连接 固定连接 direct link这些字样后面的连接，然后放到浏览器里面看看能不能直接看到图片。</p>
  </li>
  <li>
    <p>加入到你的markdown文件中</p>

    <p>加入这样句子就能直接引用你的照片了。比如照片地址是：http://i4.minus.com/i6GkonP3Qs2dr.jpg</p>

    <p>{ % img http://i4.minus.com/i6GkonP3Qs2dr.jpg % }</p>
  </li>
</ul>

<p>好了，图片插入完了，生成网页，预览一下吧。</p>

<p>如果你没有浏览器，有时候就是会很蹩手，那么推荐一个方法，</p>

<p>curl -F ‘name=@/path/to/image’ http://img.vim-cn.com/</p>

<p>执行结果就是一个固定图片地址，会用了吧。vim神器！</p>

<h3 id="section-5">还有依稀地方不尽如人意，还行再改改。</h3>

<p>我把左面那个meta信息栏去掉了，我是这么干的</p>

<p>通过浏览器调试我发现那个信息栏关键字是&lt;div class=&#8221;meta&#8221;&gt;，于是我就…</p>

<p>$ grep -R \“meta\” * </p>

<p>返回结果，除了生成的网页以外，有两个文件</p>

<p>source/_includes/archive_post.html: &lt;div class=&#8221;meta&#8221;&gt;<br />
source/_includes/article.html: &lt;div class=&#8221;meta&#8221;&gt; </p>

<p>进到这个两个文件把两个div块注释掉 &lt;!–div class=”meta”&gt; &lt;/div–&gt;</p>

<p>然后生成网页，预览，发现确实管用，但是，预留的地方还有，通过浏览器调试发现是css中margin-left: 200px这句话的作用。于是我又…….</p>

<p>$ grep -R margin-left:\ 200px * </p>

<p>返回结果</p>

<p>sass/parts/_archive.scss: margin-left: 200px;<br />
sass/parts/_post.scss: margin-left: 200px;</p>

<p>然后我把这两行注释掉了，/*margin-left: 200px;*/  生成网页，预览，好了一切安宁了。</p>

<p>还有就是markdown不能改变字体颜色，这个时候当然要清楚大杀器，嵌入html代码了。</p>

<p>于是就 This is &lt;span style=”color: red”&gt;written in red&lt;/span&gt;. 这样就可以了。</p>

<p>最后，各位可以回到首页去想看看效果吧，请访问http://lvzongting.github.io</p>

<p>暂时就这么多。随着我博客的建立，随时会更新这篇文章。或是各位在使用的时候有什么想法，也可以留言。我也会更新到日志当中的。</p>
]]></content>
  </entry>
  
</feed>
